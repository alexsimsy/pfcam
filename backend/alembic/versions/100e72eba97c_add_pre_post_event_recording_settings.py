"""add_pre_post_event_recording_settings

Revision ID: 100e72eba97c
Revises: 003_add_snapshot_model
Create Date: 2025-07-07 06:58:32.810813

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '100e72eba97c'
down_revision = '003_add_snapshot_model'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns as nullable first
    op.add_column('application_settings', sa.Column('pre_event_recording_seconds', sa.Integer(), nullable=True))
    op.add_column('application_settings', sa.Column('post_event_recording_seconds', sa.Integer(), nullable=True))
    
    # Set default values for existing rows
    op.execute("UPDATE application_settings SET pre_event_recording_seconds = 10 WHERE pre_event_recording_seconds IS NULL")
    op.execute("UPDATE application_settings SET post_event_recording_seconds = 10 WHERE post_event_recording_seconds IS NULL")
    
    # Make columns NOT NULL
    op.alter_column('application_settings', 'pre_event_recording_seconds', nullable=False)
    op.alter_column('application_settings', 'post_event_recording_seconds', nullable=False)
    
    # Drop old columns if they exist (conditional drops)
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    columns = [col['name'] for col in inspector.get_columns('application_settings')]
    
    if 'post_event_seconds' in columns:
        op.drop_column('application_settings', 'post_event_seconds')
    if 'pre_event_seconds' in columns:
        op.drop_column('application_settings', 'pre_event_seconds')
    if 'live_stream_quality' in columns:
        op.drop_column('application_settings', 'live_stream_quality')
    if 'recording_quality' in columns:
        op.drop_column('application_settings', 'recording_quality')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('application_settings', sa.Column('recording_quality', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('application_settings', sa.Column('live_stream_quality', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('application_settings', sa.Column('pre_event_seconds', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('application_settings', sa.Column('post_event_seconds', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('application_settings', 'post_event_recording_seconds')
    op.drop_column('application_settings', 'pre_event_recording_seconds')
    # ### end Alembic commands ### 